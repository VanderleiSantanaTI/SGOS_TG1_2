{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Teste/Documents/GitHub/SGOS_TG1_2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common/http\";\nclass OrdensServicoPage {\n  constructor(router, menuController, loadingController, toastController, alertController, modalController, http) {\n    this.router = router;\n    this.menuController = menuController;\n    this.loadingController = loadingController;\n    this.toastController = toastController;\n    this.alertController = alertController;\n    this.modalController = modalController;\n    this.http = http;\n    this.destroy$ = new Subject();\n    this.ordensServico = [];\n    this.filteredOrdens = [];\n    this.veiculos = [];\n    this.currentUser = null;\n    this.loading = false;\n    this.searchTerm = '';\n    this.selectedStatus = '';\n    // Create OS form data\n    this.showCreateForm = false;\n    this.createFormData = {\n      data: this.getCurrentDate(),\n      veiculo_id: '',\n      hodometro: '',\n      problema_apresentado: '',\n      sistema_afetado: '',\n      causa_da_avaria: '',\n      manutencao: 'PREVENTIVA'\n    };\n    this.statusOptions = [{\n      value: '',\n      label: 'Todas'\n    }, {\n      value: 'ABERTA',\n      label: 'Abertas'\n    }, {\n      value: 'FECHADA',\n      label: 'Fechadas'\n    }, {\n      value: 'RETIRADA',\n      label: 'Retiradas'\n    }];\n    this.sistemaOptions = ['Motor', 'Transmissão', 'Freios', 'Suspensão', 'Elétrico', 'Ar Condicionado', 'Carroceria', 'Pneus', 'Combustível', 'Outros'];\n  }\n  ngOnInit() {\n    // Get user from localStorage\n    const userStr = localStorage.getItem('sgos_user');\n    if (userStr) {\n      this.currentUser = JSON.parse(userStr);\n    }\n    this.loadOrdensServico();\n    this.loadVeiculos();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  /**\n   * Load service orders from API\n   */\n  loadOrdensServico() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.loading = true;\n      try {\n        const token = localStorage.getItem('sgos_token');\n        const options = {};\n        if (token) {\n          options.headers = {\n            'Authorization': `Bearer ${token}`\n          };\n        }\n        const response = yield _this.http.get('http://localhost:8000/api/v1/ordens-servico/', options).toPromise();\n        if (response && response.success && response.data) {\n          _this.ordensServico = response.data.items || [];\n          _this.applyFilters();\n        }\n      } catch (error) {\n        console.error('Error loading service orders:', error);\n        yield _this.showErrorToast('Erro ao carregar ordens de serviço: ' + (error.message || 'Erro desconhecido'));\n      } finally {\n        _this.loading = false;\n      }\n    })();\n  }\n  /**\n   * Load vehicles for selection\n   */\n  loadVeiculos() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = localStorage.getItem('sgos_token');\n        const options = {};\n        if (token) {\n          options.headers = {\n            'Authorization': `Bearer ${token}`\n          };\n        }\n        const response = yield _this2.http.get('http://localhost:8000/api/v1/veiculos/', options).toPromise();\n        if (response && response.success && response.data) {\n          _this2.veiculos = response.data.items || [];\n        }\n      } catch (error) {\n        console.error('Error loading vehicles:', error);\n      }\n    })();\n  }\n  /**\n   * Apply search and status filters\n   */\n  applyFilters() {\n    this.filteredOrdens = this.ordensServico.filter(ordem => {\n      const matchesSearch = !this.searchTerm || ordem.problema_apresentado.toLowerCase().includes(this.searchTerm.toLowerCase()) || ordem.sistema_afetado.toLowerCase().includes(this.searchTerm.toLowerCase()) || ordem.veiculo?.marca.toLowerCase().includes(this.searchTerm.toLowerCase()) || ordem.veiculo?.modelo.toLowerCase().includes(this.searchTerm.toLowerCase()) || ordem.veiculo?.placa.toLowerCase().includes(this.searchTerm.toLowerCase());\n      const matchesStatus = !this.selectedStatus || ordem.situacao_os === this.selectedStatus;\n      return matchesSearch && matchesStatus;\n    });\n  }\n  /**\n   * Handle search input\n   */\n  onSearchChange(event) {\n    this.searchTerm = event.target.value || '';\n    this.applyFilters();\n  }\n  /**\n   * Handle status filter change\n   */\n  onStatusChange(event) {\n    this.selectedStatus = event.target.value || '';\n    this.applyFilters();\n  }\n  /**\n   * Handle pull-to-refresh\n   */\n  onRefresh(event) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.loadOrdensServico();\n      event.target.complete();\n    })();\n  }\n  /**\n   * Show create OS form\n   */\n  showCreateOS() {\n    if (this.veiculos.length === 0) {\n      this.showErrorToast('Nenhum veículo disponível. Cadastre veículos primeiro.');\n      return;\n    }\n    this.showCreateForm = true;\n    this.resetCreateForm();\n  }\n  /**\n   * Hide create OS form\n   */\n  hideCreateOS() {\n    this.showCreateForm = false;\n    this.resetCreateForm();\n  }\n  /**\n   * Reset create form\n   */\n  resetCreateForm() {\n    this.createFormData = {\n      data: this.getCurrentDate(),\n      veiculo_id: '',\n      hodometro: '',\n      problema_apresentado: '',\n      sistema_afetado: '',\n      causa_da_avaria: '',\n      manutencao: 'PREVENTIVA'\n    };\n  }\n  /**\n   * Create new service order\n   */\n  createOrdemServico() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      // Validate form\n      if (!_this4.isCreateFormValid()) {\n        yield _this4.showErrorToast('Por favor, preencha todos os campos obrigatórios');\n        return;\n      }\n      const loading = yield _this4.loadingController.create({\n        message: 'Criando ordem de serviço...'\n      });\n      yield loading.present();\n      try {\n        const token = localStorage.getItem('sgos_token');\n        const options = {\n          headers: {}\n        };\n        if (token) {\n          options.headers['Authorization'] = `Bearer ${token}`;\n        }\n        const formData = {\n          ..._this4.createFormData,\n          veiculo_id: parseInt(_this4.createFormData.veiculo_id)\n        };\n        const response = yield _this4.http.post('http://localhost:8000/api/v1/ordens-servico/', formData, options).toPromise();\n        if (response && response.success) {\n          yield _this4.showSuccessToast('Ordem de serviço criada com sucesso!');\n          _this4.hideCreateOS();\n          yield _this4.loadOrdensServico();\n        }\n      } catch (error) {\n        console.error('Error creating service order:', error);\n        yield _this4.showErrorToast('Erro ao criar ordem de serviço: ' + (error.message || 'Erro desconhecido'));\n      } finally {\n        yield loading.dismiss();\n      }\n    })();\n  }\n  /**\n   * Validate create form\n   */\n  isCreateFormValid() {\n    return !!(this.createFormData.data && this.createFormData.veiculo_id && this.createFormData.hodometro && this.createFormData.problema_apresentado && this.createFormData.sistema_afetado && this.createFormData.causa_da_avaria);\n  }\n  /**\n   * Get current date in YYYY-MM-DD format\n   */\n  getCurrentDate() {\n    const today = new Date();\n    return today.toISOString().split('T')[0];\n  }\n  /**\n   * Get status color\n   */\n  getStatusColor(status) {\n    switch (status) {\n      case 'ABERTA':\n        return 'warning';\n      case 'FECHADA':\n        return 'success';\n      case 'RETIRADA':\n        return 'primary';\n      default:\n        return 'medium';\n    }\n  }\n  /**\n   * Get status display name\n   */\n  getStatusDisplayName(status) {\n    switch (status) {\n      case 'ABERTA':\n        return 'Aberta';\n      case 'FECHADA':\n        return 'Fechada';\n      case 'RETIRADA':\n        return 'Retirada';\n      default:\n        return status;\n    }\n  }\n  /**\n   * Get maintenance type display name\n   */\n  getMaintenanceDisplayName(type) {\n    switch (type) {\n      case 'PREVENTIVA':\n        return 'Preventiva';\n      case 'CORRETIVA':\n        return 'Corretiva';\n      default:\n        return type;\n    }\n  }\n  /**\n   * Format date for display\n   */\n  formatDate(dateString) {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('pt-BR');\n    } catch (error) {\n      return dateString;\n    }\n  }\n  /**\n   * Get vehicle display name\n   */\n  getVeiculoDisplayName(veiculo) {\n    if (!veiculo) return 'Veículo não encontrado';\n    return `${veiculo.marca} ${veiculo.modelo} (${veiculo.placa})`;\n  }\n  /**\n   * View OS details\n   */\n  viewOSDetails(os) {\n    // For now, show alert with details\n    this.showOSDetailsModal(os);\n  }\n  /**\n   * Show OS details modal\n   */\n  showOSDetailsModal(os) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const alert = yield _this5.alertController.create({\n        header: `OS #${os.id}`,\n        message: `\n        <strong>Veículo:</strong> ${_this5.getVeiculoDisplayName(os.veiculo)}<br>\n        <strong>Data:</strong> ${_this5.formatDate(os.created_at)}<br>\n        <strong>Status:</strong> ${_this5.getStatusDisplayName(os.situacao_os)}<br>\n        <strong>Problema:</strong> ${os.problema_apresentado}<br>\n        <strong>Sistema:</strong> ${os.sistema_afetado}<br>\n        <strong>Tipo:</strong> ${_this5.getMaintenanceDisplayName(os.manutencao)}\n      `,\n        buttons: ['Fechar']\n      });\n      yield alert.present();\n    })();\n  }\n  /**\n   * Get OS statistics\n   */\n  getOSByStatus(status) {\n    return this.ordensServico.filter(os => os.situacao_os === status);\n  }\n  /**\n   * Clear filters\n   */\n  clearFilters() {\n    this.searchTerm = '';\n    this.selectedStatus = '';\n    this.applyFilters();\n  }\n  /**\n   * Track by function for ngFor optimization\n   */\n  trackByOSId(index, os) {\n    return os.id;\n  }\n  /**\n   * Open menu\n   */\n  openMenu() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      yield _this6.menuController.open();\n    })();\n  }\n  /**\n   * Show success toast\n   */\n  showSuccessToast(message) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this7.toastController.create({\n        message,\n        duration: 3000,\n        position: 'top',\n        color: 'success'\n      });\n      yield toast.present();\n    })();\n  }\n  /**\n   * Show error toast\n   */\n  showErrorToast(message) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this8.toastController.create({\n        message,\n        duration: 4000,\n        position: 'top',\n        color: 'danger'\n      });\n      yield toast.present();\n    })();\n  }\n  static {\n    this.ɵfac = function OrdensServicoPage_Factory(t) {\n      return new (t || OrdensServicoPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.MenuController), i0.ɵɵdirectiveInject(i2.LoadingController), i0.ɵɵdirectiveInject(i2.ToastController), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i3.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: OrdensServicoPage,\n      selectors: [[\"app-ordens-servico\"]],\n      decls: 12,\n      vars: 2,\n      consts: [[3, \"translucent\"], [\"slot\", \"start\"], [3, \"fullscreen\"], [1, \"container\"]],\n      template: function OrdensServicoPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n          i0.ɵɵelement(3, \"ion-menu-button\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \"Ordens de Servi\\u00E7o\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\", 2)(7, \"div\", 3)(8, \"h1\");\n          i0.ɵɵtext(9, \"Ordens de Servi\\u00E7o\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"p\");\n          i0.ɵɵtext(11, \"Esta p\\u00E1gina ser\\u00E1 implementada em breve.\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"translucent\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"fullscreen\", true);\n        }\n      },\n      dependencies: [i2.IonButtons, i2.IonContent, i2.IonHeader, i2.IonMenuButton, i2.IonTitle, i2.IonToolbar],\n      styles: [\".container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  text-align: center;\\n  margin-top: 50px;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n  color: var(--ion-color-primary);\\n  margin-bottom: 16px;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  color: var(--ion-color-medium);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvb3JkZW5zLXNlcnZpY28vb3JkZW5zLXNlcnZpY28ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLCtCQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFFQTtFQUNFLDhCQUFBO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG59XHJcblxyXG5oMSB7XHJcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcclxuICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG59XHJcblxyXG5wIHtcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { OrdensServicoPage };","map":{"version":3,"names":["Subject","OrdensServicoPage","constructor","router","menuController","loadingController","toastController","alertController","modalController","http","destroy$","ordensServico","filteredOrdens","veiculos","currentUser","loading","searchTerm","selectedStatus","showCreateForm","createFormData","data","getCurrentDate","veiculo_id","hodometro","problema_apresentado","sistema_afetado","causa_da_avaria","manutencao","statusOptions","value","label","sistemaOptions","ngOnInit","userStr","localStorage","getItem","JSON","parse","loadOrdensServico","loadVeiculos","ngOnDestroy","next","complete","_this","_asyncToGenerator","token","options","headers","response","get","toPromise","success","items","applyFilters","error","console","showErrorToast","message","_this2","filter","ordem","matchesSearch","toLowerCase","includes","veiculo","marca","modelo","placa","matchesStatus","situacao_os","onSearchChange","event","target","onStatusChange","onRefresh","_this3","showCreateOS","length","resetCreateForm","hideCreateOS","createOrdemServico","_this4","isCreateFormValid","create","present","formData","parseInt","post","showSuccessToast","dismiss","today","Date","toISOString","split","getStatusColor","status","getStatusDisplayName","getMaintenanceDisplayName","type","formatDate","dateString","date","toLocaleDateString","getVeiculoDisplayName","viewOSDetails","os","showOSDetailsModal","_this5","alert","header","id","created_at","buttons","getOSByStatus","clearFilters","trackByOSId","index","openMenu","_this6","open","_this7","toast","duration","position","color","_this8","i0","ɵɵdirectiveInject","i1","Router","i2","MenuController","LoadingController","ToastController","AlertController","ModalController","i3","HttpClient","selectors","decls","vars","consts","template","OrdensServicoPage_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\Teste\\Documents\\GitHub\\SGOS_TG1_2\\frontend\\src\\app\\pages\\ordens-servico\\ordens-servico.page.ts","C:\\Users\\Teste\\Documents\\GitHub\\SGOS_TG1_2\\frontend\\src\\app\\pages\\ordens-servico\\ordens-servico.page.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuController, LoadingController, ToastController, AlertController, ModalController } from '@ionic/angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\ninterface OrdemServico {\r\n  id: number;\r\n  data: string;\r\n  veiculo_id: number;\r\n  hodometro: string;\r\n  problema_apresentado: string;\r\n  sistema_afetado: string;\r\n  causa_da_avaria: string;\r\n  manutencao: 'PREVENTIVA' | 'CORRETIVA';\r\n  situacao_os: 'ABERTA' | 'FECHADA' | 'RETIRADA';\r\n  usuario_id: number;\r\n  perfil: string;\r\n  created_at: string;\r\n  veiculo?: {\r\n    id: number;\r\n    marca: string;\r\n    modelo: string;\r\n    placa: string;\r\n    patrimonio: string;\r\n  };\r\n}\r\n\r\ninterface Veiculo {\r\n  id: number;\r\n  marca: string;\r\n  modelo: string;\r\n  placa: string;\r\n  patrimonio: string;\r\n  status: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-ordens-servico',\r\n  templateUrl: './ordens-servico.page.html',\r\n  styleUrls: ['./ordens-servico.page.scss'],\r\n})\r\nexport class OrdensServicoPage implements OnInit, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n  \r\n  ordensServico: OrdemServico[] = [];\r\n  filteredOrdens: OrdemServico[] = [];\r\n  veiculos: Veiculo[] = [];\r\n  currentUser: any = null;\r\n  loading = false;\r\n  searchTerm = '';\r\n  selectedStatus = '';\r\n  \r\n  // Create OS form data\r\n  showCreateForm = false;\r\n  createFormData = {\r\n    data: this.getCurrentDate(),\r\n    veiculo_id: '',\r\n    hodometro: '',\r\n    problema_apresentado: '',\r\n    sistema_afetado: '',\r\n    causa_da_avaria: '',\r\n    manutencao: 'PREVENTIVA' as 'PREVENTIVA' | 'CORRETIVA'\r\n  };\r\n  \r\n  statusOptions = [\r\n    { value: '', label: 'Todas' },\r\n    { value: 'ABERTA', label: 'Abertas' },\r\n    { value: 'FECHADA', label: 'Fechadas' },\r\n    { value: 'RETIRADA', label: 'Retiradas' }\r\n  ];\r\n\r\n  sistemaOptions = [\r\n    'Motor',\r\n    'Transmissão',\r\n    'Freios',\r\n    'Suspensão',\r\n    'Elétrico',\r\n    'Ar Condicionado',\r\n    'Carroceria',\r\n    'Pneus',\r\n    'Combustível',\r\n    'Outros'\r\n  ];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private menuController: MenuController,\r\n    private loadingController: LoadingController,\r\n    private toastController: ToastController,\r\n    private alertController: AlertController,\r\n    private modalController: ModalController,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Get user from localStorage\r\n    const userStr = localStorage.getItem('sgos_user');\r\n    if (userStr) {\r\n      this.currentUser = JSON.parse(userStr);\r\n    }\r\n    \r\n    this.loadOrdensServico();\r\n    this.loadVeiculos();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Load service orders from API\r\n   */\r\n  async loadOrdensServico() {\r\n    this.loading = true;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('sgos_token');\r\n      const options: any = {};\r\n      \r\n      if (token) {\r\n        options.headers = { 'Authorization': `Bearer ${token}` };\r\n      }\r\n      \r\n      const response: any = await this.http.get(\r\n        'http://localhost:8000/api/v1/ordens-servico/', \r\n        options\r\n      ).toPromise();\r\n      \r\n      if (response && response.success && response.data) {\r\n        this.ordensServico = response.data.items || [];\r\n        this.applyFilters();\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading service orders:', error);\r\n      await this.showErrorToast('Erro ao carregar ordens de serviço: ' + (error.message || 'Erro desconhecido'));\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load vehicles for selection\r\n   */\r\n  async loadVeiculos() {\r\n    try {\r\n      const token = localStorage.getItem('sgos_token');\r\n      const options: any = {};\r\n      \r\n      if (token) {\r\n        options.headers = { 'Authorization': `Bearer ${token}` };\r\n      }\r\n      \r\n      const response: any = await this.http.get(\r\n        'http://localhost:8000/api/v1/veiculos/', \r\n        options\r\n      ).toPromise();\r\n      \r\n      if (response && response.success && response.data) {\r\n        this.veiculos = response.data.items || [];\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading vehicles:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply search and status filters\r\n   */\r\n  applyFilters() {\r\n    this.filteredOrdens = this.ordensServico.filter(ordem => {\r\n      const matchesSearch = !this.searchTerm || \r\n        ordem.problema_apresentado.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        ordem.sistema_afetado.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        ordem.veiculo?.marca.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        ordem.veiculo?.modelo.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        ordem.veiculo?.placa.toLowerCase().includes(this.searchTerm.toLowerCase());\r\n      \r\n      const matchesStatus = !this.selectedStatus || ordem.situacao_os === this.selectedStatus;\r\n      \r\n      return matchesSearch && matchesStatus;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle search input\r\n   */\r\n  onSearchChange(event: any) {\r\n    this.searchTerm = event.target.value || '';\r\n    this.applyFilters();\r\n  }\r\n\r\n  /**\r\n   * Handle status filter change\r\n   */\r\n  onStatusChange(event: any) {\r\n    this.selectedStatus = event.target.value || '';\r\n    this.applyFilters();\r\n  }\r\n\r\n  /**\r\n   * Handle pull-to-refresh\r\n   */\r\n  async onRefresh(event: any) {\r\n    await this.loadOrdensServico();\r\n    event.target.complete();\r\n  }\r\n\r\n  /**\r\n   * Show create OS form\r\n   */\r\n  showCreateOS() {\r\n    if (this.veiculos.length === 0) {\r\n      this.showErrorToast('Nenhum veículo disponível. Cadastre veículos primeiro.');\r\n      return;\r\n    }\r\n    \r\n    this.showCreateForm = true;\r\n    this.resetCreateForm();\r\n  }\r\n\r\n  /**\r\n   * Hide create OS form\r\n   */\r\n  hideCreateOS() {\r\n    this.showCreateForm = false;\r\n    this.resetCreateForm();\r\n  }\r\n\r\n  /**\r\n   * Reset create form\r\n   */\r\n  resetCreateForm() {\r\n    this.createFormData = {\r\n      data: this.getCurrentDate(),\r\n      veiculo_id: '',\r\n      hodometro: '',\r\n      problema_apresentado: '',\r\n      sistema_afetado: '',\r\n      causa_da_avaria: '',\r\n      manutencao: 'PREVENTIVA'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create new service order\r\n   */\r\n  async createOrdemServico() {\r\n    // Validate form\r\n    if (!this.isCreateFormValid()) {\r\n      await this.showErrorToast('Por favor, preencha todos os campos obrigatórios');\r\n      return;\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: 'Criando ordem de serviço...'\r\n    });\r\n    await loading.present();\r\n\r\n    try {\r\n      const token = localStorage.getItem('sgos_token');\r\n      const options: any = {\r\n        headers: {}\r\n      };\r\n      \r\n      if (token) {\r\n        options.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      \r\n      const formData = {\r\n        ...this.createFormData,\r\n        veiculo_id: parseInt(this.createFormData.veiculo_id)\r\n      };\r\n      \r\n      const response: any = await this.http.post(\r\n        'http://localhost:8000/api/v1/ordens-servico/',\r\n        formData,\r\n        options\r\n      ).toPromise();\r\n      \r\n      if (response && response.success) {\r\n        await this.showSuccessToast('Ordem de serviço criada com sucesso!');\r\n        this.hideCreateOS();\r\n        await this.loadOrdensServico();\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error creating service order:', error);\r\n      await this.showErrorToast('Erro ao criar ordem de serviço: ' + (error.message || 'Erro desconhecido'));\r\n    } finally {\r\n      await loading.dismiss();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate create form\r\n   */\r\n  isCreateFormValid(): boolean {\r\n    return !!(\r\n      this.createFormData.data &&\r\n      this.createFormData.veiculo_id &&\r\n      this.createFormData.hodometro &&\r\n      this.createFormData.problema_apresentado &&\r\n      this.createFormData.sistema_afetado &&\r\n      this.createFormData.causa_da_avaria\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get current date in YYYY-MM-DD format\r\n   */\r\n  getCurrentDate(): string {\r\n    const today = new Date();\r\n    return today.toISOString().split('T')[0];\r\n  }\r\n\r\n  /**\r\n   * Get status color\r\n   */\r\n  getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'ABERTA':\r\n        return 'warning';\r\n      case 'FECHADA':\r\n        return 'success';\r\n      case 'RETIRADA':\r\n        return 'primary';\r\n      default:\r\n        return 'medium';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get status display name\r\n   */\r\n  getStatusDisplayName(status: string): string {\r\n    switch (status) {\r\n      case 'ABERTA':\r\n        return 'Aberta';\r\n      case 'FECHADA':\r\n        return 'Fechada';\r\n      case 'RETIRADA':\r\n        return 'Retirada';\r\n      default:\r\n        return status;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get maintenance type display name\r\n   */\r\n  getMaintenanceDisplayName(type: string): string {\r\n    switch (type) {\r\n      case 'PREVENTIVA':\r\n        return 'Preventiva';\r\n      case 'CORRETIVA':\r\n        return 'Corretiva';\r\n      default:\r\n        return type;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Format date for display\r\n   */\r\n  formatDate(dateString: string): string {\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('pt-BR');\r\n    } catch (error) {\r\n      return dateString;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get vehicle display name\r\n   */\r\n  getVeiculoDisplayName(veiculo: any): string {\r\n    if (!veiculo) return 'Veículo não encontrado';\r\n    return `${veiculo.marca} ${veiculo.modelo} (${veiculo.placa})`;\r\n  }\r\n\r\n  /**\r\n   * View OS details\r\n   */\r\n  viewOSDetails(os: OrdemServico) {\r\n    // For now, show alert with details\r\n    this.showOSDetailsModal(os);\r\n  }\r\n\r\n  /**\r\n   * Show OS details modal\r\n   */\r\n  async showOSDetailsModal(os: OrdemServico) {\r\n    const alert = await this.alertController.create({\r\n      header: `OS #${os.id}`,\r\n      message: `\r\n        <strong>Veículo:</strong> ${this.getVeiculoDisplayName(os.veiculo)}<br>\r\n        <strong>Data:</strong> ${this.formatDate(os.created_at)}<br>\r\n        <strong>Status:</strong> ${this.getStatusDisplayName(os.situacao_os)}<br>\r\n        <strong>Problema:</strong> ${os.problema_apresentado}<br>\r\n        <strong>Sistema:</strong> ${os.sistema_afetado}<br>\r\n        <strong>Tipo:</strong> ${this.getMaintenanceDisplayName(os.manutencao)}\r\n      `,\r\n      buttons: ['Fechar']\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  /**\r\n   * Get OS statistics\r\n   */\r\n  getOSByStatus(status: string): OrdemServico[] {\r\n    return this.ordensServico.filter(os => os.situacao_os === status);\r\n  }\r\n\r\n  /**\r\n   * Clear filters\r\n   */\r\n  clearFilters() {\r\n    this.searchTerm = '';\r\n    this.selectedStatus = '';\r\n    this.applyFilters();\r\n  }\r\n\r\n  /**\r\n   * Track by function for ngFor optimization\r\n   */\r\n  trackByOSId(index: number, os: OrdemServico): number {\r\n    return os.id;\r\n  }\r\n\r\n  /**\r\n   * Open menu\r\n   */\r\n  async openMenu() {\r\n    await this.menuController.open();\r\n  }\r\n\r\n  /**\r\n   * Show success toast\r\n   */\r\n  private async showSuccessToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message,\r\n      duration: 3000,\r\n      position: 'top',\r\n      color: 'success'\r\n    });\r\n    await toast.present();\r\n  }\r\n\r\n  /**\r\n   * Show error toast\r\n   */\r\n  private async showErrorToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message,\r\n      duration: 4000,\r\n      position: 'top',\r\n      color: 'danger'\r\n    });\r\n    await toast.present();\r\n  }\r\n}","<ion-header [translucent]=\"true\">\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-menu-button></ion-menu-button>\r\n    </ion-buttons>\r\n    <ion-title>Ordens de Serviço</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"true\">\r\n  <div class=\"container\">\r\n    <h1>Ordens de Serviço</h1>\r\n    <p>Esta página será implementada em breve.</p>\r\n  </div>\r\n</ion-content>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}