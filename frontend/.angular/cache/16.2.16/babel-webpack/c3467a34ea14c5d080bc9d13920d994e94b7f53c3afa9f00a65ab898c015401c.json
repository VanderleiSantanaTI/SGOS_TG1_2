{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Teste/Documents/GitHub/SGOS_TG1_2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Subject } from 'rxjs';\nlet OrdensServicoPage = class OrdensServicoPage {\n  constructor(router, menuController, loadingController, toastController, alertController, modalController, http) {\n    this.router = router;\n    this.menuController = menuController;\n    this.loadingController = loadingController;\n    this.toastController = toastController;\n    this.alertController = alertController;\n    this.modalController = modalController;\n    this.http = http;\n    this.destroy$ = new Subject();\n    this.ordensServico = [];\n    this.filteredOrdens = [];\n    this.veiculos = [];\n    this.currentUser = null;\n    this.loading = false;\n    this.searchTerm = '';\n    this.selectedStatus = '';\n    // Create OS form data\n    this.showCreateForm = false;\n    this.createFormData = {\n      data: this.getCurrentDate(),\n      veiculo_id: '',\n      hodometro: '',\n      problema_apresentado: '',\n      sistema_afetado: '',\n      causa_da_avaria: '',\n      manutencao: 'PREVENTIVA'\n    };\n    this.statusOptions = [{\n      value: '',\n      label: 'Todas'\n    }, {\n      value: 'ABERTA',\n      label: 'Abertas'\n    }, {\n      value: 'FECHADA',\n      label: 'Fechadas'\n    }, {\n      value: 'RETIRADA',\n      label: 'Retiradas'\n    }];\n    this.sistemaOptions = ['Motor', 'Transmissão', 'Freios', 'Suspensão', 'Elétrico', 'Ar Condicionado', 'Carroceria', 'Pneus', 'Combustível', 'Outros'];\n  }\n  ngOnInit() {\n    // Get user from localStorage\n    const userStr = localStorage.getItem('sgos_user');\n    if (userStr) {\n      this.currentUser = JSON.parse(userStr);\n    }\n    this.loadOrdensServico();\n    this.loadVeiculos();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  /**\n   * Load service orders from API\n   */\n  loadOrdensServico() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.loading = true;\n      try {\n        const token = localStorage.getItem('sgos_token');\n        const options = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        if (token) {\n          options.headers['Authorization'] = `Bearer ${token}`;\n        }\n        const response = yield _this.http.get('http://localhost:8000/api/v1/ordens-servico/', options).toPromise();\n        console.log('OS Response:', response);\n        if (response && (response.status === 'success' || response.success) && response.data) {\n          _this.ordensServico = response.data.items || [];\n          console.log('Loaded OS:', _this.ordensServico.length);\n          // Carregar informações do mecânico para OS fechadas\n          yield _this.loadMechanicInfoForClosedOS();\n          _this.applyFilters();\n        } else {\n          console.log('No data in response:', response);\n          _this.ordensServico = [];\n          _this.applyFilters();\n        }\n      } catch (error) {\n        console.error('Error loading service orders:', error);\n        yield _this.showErrorToast('Erro ao carregar ordens de serviço: ' + (error.message || 'Erro desconhecido'));\n      } finally {\n        _this.loading = false;\n      }\n    })();\n  }\n  /**\n   * Load vehicles for selection\n   */\n  loadVeiculos() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = localStorage.getItem('sgos_token');\n        const options = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        if (token) {\n          options.headers['Authorization'] = `Bearer ${token}`;\n        }\n        const response = yield _this2.http.get('http://localhost:8000/api/v1/veiculos/', options).toPromise();\n        console.log('Vehicles Response:', response);\n        if (response && (response.status === 'success' || response.success) && response.data) {\n          _this2.veiculos = response.data.items || [];\n          console.log('Loaded vehicles:', _this2.veiculos.length);\n        } else {\n          console.log('No vehicles data:', response);\n          _this2.veiculos = [];\n        }\n      } catch (error) {\n        console.error('Error loading vehicles:', error);\n      }\n    })();\n  }\n  /**\n   * Apply search and status filters\n   */\n  applyFilters() {\n    this.filteredOrdens = this.ordensServico.filter(ordem => {\n      const matchesSearch = !this.searchTerm || ordem.problema_apresentado.toLowerCase().includes(this.searchTerm.toLowerCase()) || ordem.sistema_afetado.toLowerCase().includes(this.searchTerm.toLowerCase()) || ordem.veiculo?.marca.toLowerCase().includes(this.searchTerm.toLowerCase()) || ordem.veiculo?.modelo.toLowerCase().includes(this.searchTerm.toLowerCase()) || ordem.veiculo?.placa.toLowerCase().includes(this.searchTerm.toLowerCase());\n      const matchesStatus = !this.selectedStatus || ordem.situacao_os === this.selectedStatus;\n      return matchesSearch && matchesStatus;\n    });\n  }\n  /**\n   * Handle search input\n   */\n  onSearchChange(event) {\n    this.searchTerm = event.target.value || '';\n    this.applyFilters();\n  }\n  /**\n   * Handle status filter change\n   */\n  onStatusChange(event) {\n    this.selectedStatus = event.target.value || '';\n    this.applyFilters();\n  }\n  /**\n   * Handle pull-to-refresh\n   */\n  onRefresh(event) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      yield _this3.loadOrdensServico();\n      event.target.complete();\n    })();\n  }\n  /**\n   * Show create OS form\n   */\n  showCreateOS() {\n    if (this.veiculos.length === 0) {\n      this.showErrorToast('Nenhum veículo disponível. Cadastre veículos primeiro.');\n      return;\n    }\n    this.showCreateForm = true;\n    this.resetCreateForm();\n  }\n  /**\n   * Hide create OS form\n   */\n  hideCreateOS() {\n    this.showCreateForm = false;\n    this.resetCreateForm();\n  }\n  /**\n   * Reset create form\n   */\n  resetCreateForm() {\n    this.createFormData = {\n      data: this.getCurrentDate(),\n      veiculo_id: '',\n      hodometro: '',\n      problema_apresentado: '',\n      sistema_afetado: '',\n      causa_da_avaria: '',\n      manutencao: 'PREVENTIVA'\n    };\n  }\n  /**\n   * Create new service order\n   */\n  createOrdemServico() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      // Validate form\n      if (!_this4.isCreateFormValid()) {\n        yield _this4.showErrorToast('Por favor, preencha todos os campos obrigatórios');\n        return;\n      }\n      // Validate hodometro\n      const hodometroNum = parseInt(_this4.createFormData.hodometro);\n      if (isNaN(hodometroNum) || hodometroNum <= 0) {\n        yield _this4.showErrorToast('Hodômetro deve ser um número válido maior que zero');\n        return;\n      }\n      const loading = yield _this4.loadingController.create({\n        message: 'Criando ordem de serviço...'\n      });\n      yield loading.present();\n      try {\n        const token = localStorage.getItem('sgos_token');\n        const options = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        if (token) {\n          options.headers['Authorization'] = `Bearer ${token}`;\n        }\n        const formData = {\n          ..._this4.createFormData,\n          veiculo_id: parseInt(_this4.createFormData.veiculo_id),\n          hodometro: _this4.createFormData.hodometro,\n          perfil: _this4.currentUser?.perfil || 'MECANICO',\n          situacao_os: 'ABERTA'\n        };\n        const response = yield _this4.http.post('http://localhost:8000/api/v1/ordens-servico/', formData, options).toPromise();\n        console.log('Create OS Response:', response);\n        if (response && (response.status === 'success' || response.success)) {\n          yield _this4.showSuccessToast('Ordem de serviço criada com sucesso!');\n          _this4.hideCreateOS();\n          yield _this4.loadOrdensServico();\n        } else {\n          throw new Error(response?.message || 'Erro ao criar OS');\n        }\n      } catch (error) {\n        console.error('Error creating service order:', error);\n        yield _this4.showErrorToast('Erro ao criar ordem de serviço: ' + (error.message || 'Erro desconhecido'));\n      } finally {\n        yield loading.dismiss();\n      }\n    })();\n  }\n  /**\n   * Validate create form\n   */\n  isCreateFormValid() {\n    const hodometroNum = parseInt(this.createFormData.hodometro);\n    return !!(this.createFormData.data && this.createFormData.veiculo_id && this.createFormData.hodometro && !isNaN(hodometroNum) && hodometroNum > 0 && this.createFormData.problema_apresentado && this.createFormData.sistema_afetado && this.createFormData.causa_da_avaria);\n  }\n  /**\n   * Get current date in YYYY-MM-DD format\n   */\n  getCurrentDate() {\n    const today = new Date();\n    return today.toISOString().split('T')[0];\n  }\n  /**\n   * Get status color\n   */\n  getStatusColor(status) {\n    switch (status) {\n      case 'ABERTA':\n        return 'warning';\n      case 'FECHADA':\n        return 'success';\n      case 'RETIRADA':\n        return 'primary';\n      default:\n        return 'medium';\n    }\n  }\n  /**\n   * Get status display name\n   */\n  getStatusDisplayName(status) {\n    switch (status) {\n      case 'ABERTA':\n        return 'Aberta';\n      case 'FECHADA':\n        return 'Fechada';\n      case 'RETIRADA':\n        return 'Retirada';\n      default:\n        return status;\n    }\n  }\n  /**\n   * Get maintenance type display name\n   */\n  getMaintenanceDisplayName(type) {\n    switch (type) {\n      case 'PREVENTIVA':\n        return 'Preventiva';\n      case 'CORRETIVA':\n        return 'Corretiva';\n      default:\n        return type;\n    }\n  }\n  /**\n   * Format date for display\n   */\n  formatDate(dateString) {\n    try {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('pt-BR');\n    } catch (error) {\n      return dateString;\n    }\n  }\n  /**\n   * Get vehicle display name\n   */\n  getVeiculoDisplayName(veiculo) {\n    if (!veiculo) return 'Veículo não encontrado';\n    return `${veiculo.marca} ${veiculo.modelo} (${veiculo.placa})`;\n  }\n  /**\n   * Get mechanics display names\n   */\n  getMechanicsDisplayNames(os) {\n    if (os.encerramentos && os.encerramentos.length > 0) {\n      const mecanicos = os.encerramentos.map(e => e.nome_mecanico || 'Não informado');\n      return mecanicos.join(', ');\n    } else if (os.encerrar_os?.nome_mecanico) {\n      return os.encerrar_os.nome_mecanico;\n    }\n    return 'Não informado';\n  }\n  /**\n   * View OS details\n   */\n  viewOSDetails(os) {\n    // For now, show alert with details\n    this.showOSDetailsModal(os);\n  }\n  /**\n   * Add services and parts to OS\n   */\n  addServicosPecas(os, event) {\n    event.stopPropagation(); // Previne que o clique propague para o card\n    this.showAddServicesModal(os);\n  }\n  /**\n   * Show OS details modal\n   */\n  showOSDetailsModal(os) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      let message = `\nVeículo: ${_this5.getVeiculoDisplayName(os.veiculo)}\n\nData: ${_this5.formatDate(os.created_at)}\n\nStatus: ${_this5.getStatusDisplayName(os.situacao_os)}\n\nProblema: ${os.problema_apresentado}\n\nSistema: ${os.sistema_afetado}\n\nTipo: ${_this5.getMaintenanceDisplayName(os.manutencao)}\n\nHodômetro: ${os.hodometro} km`;\n      // Adiciona informações do mecânico se a OS estiver fechada\n      if (os.situacao_os === 'FECHADA') {\n        // Busca informações do encerramento da OS\n        const encerramentos = yield _this5.getEncerramentoInfo(os.id);\n        if (encerramentos && encerramentos.length > 0) {\n          // Mostra todos os mecânicos que trabalharam na OS\n          const mecanicos = encerramentos.map(e => e.nome_mecanico || 'Não informado').join(', ');\n          message += `\n\nMecânicos: ${mecanicos}`;\n          // Mostra a data da manutenção do primeiro encerramento\n          if (encerramentos[0].data_da_manutencao) {\n            message += `\n\nData da Manutenção: ${_this5.formatDate(encerramentos[0].data_da_manutencao)}`;\n          }\n          // Mostra o tempo total do primeiro encerramento\n          if (encerramentos[0].tempo_total) {\n            message += `\n\nTempo Total: ${encerramentos[0].tempo_total}`;\n          }\n        }\n      }\n      message = message.trim();\n      const alert = yield _this5.alertController.create({\n        header: `OS #${os.id}`,\n        message: message,\n        buttons: ['Fechar'],\n        cssClass: 'os-details-alert'\n      });\n      yield alert.present();\n    })();\n  }\n  /**\n   * Show add services modal\n   */\n  showAddServicesModal(os) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const alert = yield _this6.alertController.create({\n        header: `Adicionar à OS #${os.id}`,\n        message: 'Escolha o que deseja adicionar:',\n        buttons: [{\n          text: 'Cancelar',\n          role: 'cancel'\n        }, {\n          text: 'Apenas Serviço',\n          handler: () => {\n            _this6.addServico(os);\n          }\n        }, {\n          text: 'Apenas Peça',\n          handler: () => {\n            _this6.addPeca(os);\n          }\n        }, {\n          text: 'Serviço + Peça',\n          handler: () => {\n            _this6.addServicoEPeca(os);\n          }\n        }]\n      });\n      yield alert.present();\n    })();\n  }\n  /**\n   * Add service only\n   */\n  addServico(os) {\n    // TODO: Implementar adição de serviço\n    this.showErrorToast('Funcionalidade de adicionar serviço será implementada em breve');\n  }\n  /**\n   * Add part only\n   */\n  addPeca(os) {\n    // TODO: Implementar adição de peça\n    this.showErrorToast('Funcionalidade de adicionar peça será implementada em breve');\n  }\n  /**\n   * Add service and part\n   */\n  addServicoEPeca(os) {\n    // TODO: Implementar adição de serviço e peça\n    this.showErrorToast('Funcionalidade de adicionar serviço e peça será implementada em breve');\n  }\n  /**\n   * Get encerramento info for OS\n   */\n  getEncerramentoInfo(osId) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = localStorage.getItem('sgos_token');\n        const options = {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        };\n        if (token) {\n          options.headers['Authorization'] = `Bearer ${token}`;\n        }\n        const response = yield _this7.http.get(`http://localhost:8000/api/v1/encerrar-os/?abrir_os_id=${osId}`, options).toPromise();\n        if (response && (response.status === 'success' || response.success) && response.data) {\n          const encerramentos = response.data.items || [];\n          // Retorna todos os encerramentos encontrados para esta OS\n          return encerramentos;\n        }\n        return [];\n      } catch (error) {\n        console.error('Error loading encerramento info:', error);\n        return [];\n      }\n    })();\n  }\n  /**\n   * Load mechanic info for closed OS\n   */\n  loadMechanicInfo(os) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      if (os.situacao_os === 'FECHADA' && !os.encerrar_os) {\n        try {\n          const encerramentos = yield _this8.getEncerramentoInfo(os.id);\n          if (encerramentos && encerramentos.length > 0) {\n            // Armazena o primeiro encerramento para compatibilidade com o template\n            os.encerrar_os = encerramentos[0];\n            // Armazena todos os encerramentos para uso futuro\n            os.encerramentos = encerramentos;\n          }\n        } catch (error) {\n          console.error('Error loading mechanic info:', error);\n        }\n      }\n    })();\n  }\n  /**\n   * Load mechanic info for all closed OS\n   */\n  loadMechanicInfoForClosedOS() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      const closedOS = _this9.ordensServico.filter(os => os.situacao_os === 'FECHADA');\n      for (const os of closedOS) {\n        yield _this9.loadMechanicInfo(os);\n      }\n    })();\n  }\n  /**\n   * Get OS statistics\n   */\n  getOSByStatus(status) {\n    return this.ordensServico.filter(os => os.situacao_os === status);\n  }\n  /**\n   * Clear filters\n   */\n  clearFilters() {\n    this.searchTerm = '';\n    this.selectedStatus = '';\n    this.applyFilters();\n  }\n  /**\n   * Track by function for ngFor optimization\n   */\n  trackByOSId(index, os) {\n    return os.id;\n  }\n  /**\n   * Track by function for ngFor optimization (vehicles)\n   */\n  trackByVeiculoId(index, veiculo) {\n    return veiculo.id;\n  }\n  /**\n   * Open menu\n   */\n  openMenu() {\n    var _this0 = this;\n    return _asyncToGenerator(function* () {\n      yield _this0.menuController.open();\n    })();\n  }\n  /**\n   * Show success toast\n   */\n  showSuccessToast(message) {\n    var _this1 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this1.toastController.create({\n        message,\n        duration: 3000,\n        position: 'top',\n        color: 'success'\n      });\n      yield toast.present();\n    })();\n  }\n  /**\n   * Show error toast\n   */\n  showErrorToast(message) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this10.toastController.create({\n        message,\n        duration: 4000,\n        position: 'top',\n        color: 'danger'\n      });\n      yield toast.present();\n    })();\n  }\n};\nOrdensServicoPage = __decorate([Component({\n  selector: 'app-ordens-servico',\n  templateUrl: './ordens-servico-simple.page.html',\n  styleUrls: ['./ordens-servico.page.scss']\n})], OrdensServicoPage);\nexport { OrdensServicoPage };","map":{"version":3,"names":["Component","Subject","OrdensServicoPage","constructor","router","menuController","loadingController","toastController","alertController","modalController","http","destroy$","ordensServico","filteredOrdens","veiculos","currentUser","loading","searchTerm","selectedStatus","showCreateForm","createFormData","data","getCurrentDate","veiculo_id","hodometro","problema_apresentado","sistema_afetado","causa_da_avaria","manutencao","statusOptions","value","label","sistemaOptions","ngOnInit","userStr","localStorage","getItem","JSON","parse","loadOrdensServico","loadVeiculos","ngOnDestroy","next","complete","_this","_asyncToGenerator","token","options","headers","response","get","toPromise","console","log","status","success","items","length","loadMechanicInfoForClosedOS","applyFilters","error","showErrorToast","message","_this2","filter","ordem","matchesSearch","toLowerCase","includes","veiculo","marca","modelo","placa","matchesStatus","situacao_os","onSearchChange","event","target","onStatusChange","onRefresh","_this3","showCreateOS","resetCreateForm","hideCreateOS","createOrdemServico","_this4","isCreateFormValid","hodometroNum","parseInt","isNaN","create","present","formData","perfil","post","showSuccessToast","Error","dismiss","today","Date","toISOString","split","getStatusColor","getStatusDisplayName","getMaintenanceDisplayName","type","formatDate","dateString","date","toLocaleDateString","getVeiculoDisplayName","getMechanicsDisplayNames","os","encerramentos","mecanicos","map","e","nome_mecanico","join","encerrar_os","viewOSDetails","showOSDetailsModal","addServicosPecas","stopPropagation","showAddServicesModal","_this5","created_at","getEncerramentoInfo","id","data_da_manutencao","tempo_total","trim","alert","header","buttons","cssClass","_this6","text","role","handler","addServico","addPeca","addServicoEPeca","osId","_this7","loadMechanicInfo","_this8","_this9","closedOS","getOSByStatus","clearFilters","trackByOSId","index","trackByVeiculoId","openMenu","_this0","open","_this1","toast","duration","position","color","_this10","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Teste\\Documents\\GitHub\\SGOS_TG1_2\\frontend\\src\\app\\pages\\ordens-servico\\ordens-servico.page.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MenuController, LoadingController, ToastController, AlertController, ModalController } from '@ionic/angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\ninterface OrdemServico {\r\n  id: number;\r\n  data: string;\r\n  veiculo_id: number;\r\n  hodometro: string;\r\n  problema_apresentado: string;\r\n  sistema_afetado: string;\r\n  causa_da_avaria: string;\r\n  manutencao: 'PREVENTIVA' | 'CORRETIVA';\r\n  situacao_os: 'ABERTA' | 'FECHADA' | 'RETIRADA';\r\n  usuario_id: number;\r\n  perfil: string;\r\n  created_at: string;\r\n  veiculo?: {\r\n    id: number;\r\n    marca: string;\r\n    modelo: string;\r\n    placa: string;\r\n    patrimonio: string;\r\n  };\r\n  usuario?: {\r\n    id: number;\r\n    nome: string;\r\n    username: string;\r\n    perfil: string;\r\n  };\r\n  encerrar_os?: {\r\n    id: number;\r\n    nome_mecanico: string;\r\n    data_da_manutencao: string;\r\n    situacao: string;\r\n    tempo_total: string;\r\n    usuario_id: number;\r\n    abrir_os_id: number;\r\n    modelo_veiculo: string;\r\n    created_at: string;\r\n  };\r\n  encerramentos?: {\r\n    id: number;\r\n    nome_mecanico: string;\r\n    data_da_manutencao: string;\r\n    situacao: string;\r\n    tempo_total: string;\r\n    usuario_id: number;\r\n    abrir_os_id: number;\r\n    modelo_veiculo: string;\r\n    created_at: string;\r\n  }[];\r\n}\r\n\r\ninterface Veiculo {\r\n  id: number;\r\n  marca: string;\r\n  modelo: string;\r\n  placa: string;\r\n  patrimonio: string;\r\n  status: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-ordens-servico',\r\n  templateUrl: './ordens-servico-simple.page.html',\r\n  styleUrls: ['./ordens-servico.page.scss'],\r\n})\r\nexport class OrdensServicoPage implements OnInit, OnDestroy {\r\n  private destroy$ = new Subject<void>();\r\n  \r\n  ordensServico: OrdemServico[] = [];\r\n  filteredOrdens: OrdemServico[] = [];\r\n  veiculos: Veiculo[] = [];\r\n  currentUser: any = null;\r\n  loading = false;\r\n  searchTerm = '';\r\n  selectedStatus = '';\r\n  \r\n  // Create OS form data\r\n  showCreateForm = false;\r\n  createFormData = {\r\n    data: this.getCurrentDate(),\r\n    veiculo_id: '',\r\n    hodometro: '',\r\n    problema_apresentado: '',\r\n    sistema_afetado: '',\r\n    causa_da_avaria: '',\r\n    manutencao: 'PREVENTIVA' as 'PREVENTIVA' | 'CORRETIVA'\r\n  };\r\n  \r\n  statusOptions = [\r\n    { value: '', label: 'Todas' },\r\n    { value: 'ABERTA', label: 'Abertas' },\r\n    { value: 'FECHADA', label: 'Fechadas' },\r\n    { value: 'RETIRADA', label: 'Retiradas' }\r\n  ];\r\n\r\n  sistemaOptions = [\r\n    'Motor',\r\n    'Transmissão',\r\n    'Freios',\r\n    'Suspensão',\r\n    'Elétrico',\r\n    'Ar Condicionado',\r\n    'Carroceria',\r\n    'Pneus',\r\n    'Combustível',\r\n    'Outros'\r\n  ];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private menuController: MenuController,\r\n    private loadingController: LoadingController,\r\n    private toastController: ToastController,\r\n    private alertController: AlertController,\r\n    private modalController: ModalController,\r\n    private http: HttpClient\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    // Get user from localStorage\r\n    const userStr = localStorage.getItem('sgos_user');\r\n    if (userStr) {\r\n      this.currentUser = JSON.parse(userStr);\r\n    }\r\n    \r\n    this.loadOrdensServico();\r\n    this.loadVeiculos();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  /**\r\n   * Load service orders from API\r\n   */\r\n  async loadOrdensServico() {\r\n    this.loading = true;\r\n    \r\n    try {\r\n      const token = localStorage.getItem('sgos_token');\r\n      const options: any = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      \r\n      if (token) {\r\n        options.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      \r\n      const response: any = await this.http.get(\r\n        'http://localhost:8000/api/v1/ordens-servico/',\r\n        options\r\n      ).toPromise();\r\n      \r\n      console.log('OS Response:', response);\r\n      \r\n      if (response && (response.status === 'success' || response.success) && response.data) {\r\n        this.ordensServico = response.data.items || [];\r\n        console.log('Loaded OS:', this.ordensServico.length);\r\n        \r\n        // Carregar informações do mecânico para OS fechadas\r\n        await this.loadMechanicInfoForClosedOS();\r\n        \r\n        this.applyFilters();\r\n      } else {\r\n        console.log('No data in response:', response);\r\n        this.ordensServico = [];\r\n        this.applyFilters();\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading service orders:', error);\r\n      await this.showErrorToast('Erro ao carregar ordens de serviço: ' + (error.message || 'Erro desconhecido'));\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load vehicles for selection\r\n   */\r\n  async loadVeiculos() {\r\n    try {\r\n      const token = localStorage.getItem('sgos_token');\r\n      const options: any = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      \r\n      if (token) {\r\n        options.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      \r\n      const response: any = await this.http.get(\r\n        'http://localhost:8000/api/v1/veiculos/',\r\n        options\r\n      ).toPromise();\r\n      \r\n      console.log('Vehicles Response:', response);\r\n      \r\n      if (response && (response.status === 'success' || response.success) && response.data) {\r\n        this.veiculos = response.data.items || [];\r\n        console.log('Loaded vehicles:', this.veiculos.length);\r\n      } else {\r\n        console.log('No vehicles data:', response);\r\n        this.veiculos = [];\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading vehicles:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply search and status filters\r\n   */\r\n  applyFilters() {\r\n    this.filteredOrdens = this.ordensServico.filter(ordem => {\r\n      const matchesSearch = !this.searchTerm || \r\n        ordem.problema_apresentado.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        ordem.sistema_afetado.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        ordem.veiculo?.marca.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        ordem.veiculo?.modelo.toLowerCase().includes(this.searchTerm.toLowerCase()) ||\r\n        ordem.veiculo?.placa.toLowerCase().includes(this.searchTerm.toLowerCase());\r\n      \r\n      const matchesStatus = !this.selectedStatus || ordem.situacao_os === this.selectedStatus;\r\n      \r\n      return matchesSearch && matchesStatus;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle search input\r\n   */\r\n  onSearchChange(event: any) {\r\n    this.searchTerm = event.target.value || '';\r\n    this.applyFilters();\r\n  }\r\n\r\n  /**\r\n   * Handle status filter change\r\n   */\r\n  onStatusChange(event: any) {\r\n    this.selectedStatus = event.target.value || '';\r\n    this.applyFilters();\r\n  }\r\n\r\n  /**\r\n   * Handle pull-to-refresh\r\n   */\r\n  async onRefresh(event: any) {\r\n    await this.loadOrdensServico();\r\n    event.target.complete();\r\n  }\r\n\r\n  /**\r\n   * Show create OS form\r\n   */\r\n  showCreateOS() {\r\n    if (this.veiculos.length === 0) {\r\n      this.showErrorToast('Nenhum veículo disponível. Cadastre veículos primeiro.');\r\n      return;\r\n    }\r\n    \r\n    this.showCreateForm = true;\r\n    this.resetCreateForm();\r\n  }\r\n\r\n  /**\r\n   * Hide create OS form\r\n   */\r\n  hideCreateOS() {\r\n    this.showCreateForm = false;\r\n    this.resetCreateForm();\r\n  }\r\n\r\n  /**\r\n   * Reset create form\r\n   */\r\n  resetCreateForm() {\r\n    this.createFormData = {\r\n      data: this.getCurrentDate(),\r\n      veiculo_id: '',\r\n      hodometro: '',\r\n      problema_apresentado: '',\r\n      sistema_afetado: '',\r\n      causa_da_avaria: '',\r\n      manutencao: 'PREVENTIVA'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create new service order\r\n   */\r\n  async createOrdemServico() {\r\n    // Validate form\r\n    if (!this.isCreateFormValid()) {\r\n      await this.showErrorToast('Por favor, preencha todos os campos obrigatórios');\r\n      return;\r\n    }\r\n\r\n    // Validate hodometro\r\n    const hodometroNum = parseInt(this.createFormData.hodometro);\r\n    if (isNaN(hodometroNum) || hodometroNum <= 0) {\r\n      await this.showErrorToast('Hodômetro deve ser um número válido maior que zero');\r\n      return;\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: 'Criando ordem de serviço...'\r\n    });\r\n    await loading.present();\r\n\r\n    try {\r\n      const token = localStorage.getItem('sgos_token');\r\n      const options: any = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      \r\n      if (token) {\r\n        options.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      \r\n      const formData = {\r\n        ...this.createFormData,\r\n        veiculo_id: parseInt(this.createFormData.veiculo_id),\r\n        hodometro: this.createFormData.hodometro,\r\n        perfil: this.currentUser?.perfil || 'MECANICO',\r\n        situacao_os: 'ABERTA'\r\n      };\r\n      \r\n      const response: any = await this.http.post(\r\n        'http://localhost:8000/api/v1/ordens-servico/',\r\n        formData,\r\n        options\r\n      ).toPromise();\r\n      \r\n      console.log('Create OS Response:', response);\r\n      \r\n      if (response && (response.status === 'success' || response.success)) {\r\n        await this.showSuccessToast('Ordem de serviço criada com sucesso!');\r\n        this.hideCreateOS();\r\n        await this.loadOrdensServico();\r\n      } else {\r\n        throw new Error(response?.message || 'Erro ao criar OS');\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error creating service order:', error);\r\n      await this.showErrorToast('Erro ao criar ordem de serviço: ' + (error.message || 'Erro desconhecido'));\r\n    } finally {\r\n      await loading.dismiss();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate create form\r\n   */\r\n  isCreateFormValid(): boolean {\r\n    const hodometroNum = parseInt(this.createFormData.hodometro);\r\n    return !!(\r\n      this.createFormData.data &&\r\n      this.createFormData.veiculo_id &&\r\n      this.createFormData.hodometro &&\r\n      !isNaN(hodometroNum) &&\r\n      hodometroNum > 0 &&\r\n      this.createFormData.problema_apresentado &&\r\n      this.createFormData.sistema_afetado &&\r\n      this.createFormData.causa_da_avaria\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get current date in YYYY-MM-DD format\r\n   */\r\n  getCurrentDate(): string {\r\n    const today = new Date();\r\n    return today.toISOString().split('T')[0];\r\n  }\r\n\r\n  /**\r\n   * Get status color\r\n   */\r\n  getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'ABERTA':\r\n        return 'warning';\r\n      case 'FECHADA':\r\n        return 'success';\r\n      case 'RETIRADA':\r\n        return 'primary';\r\n      default:\r\n        return 'medium';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get status display name\r\n   */\r\n  getStatusDisplayName(status: string): string {\r\n    switch (status) {\r\n      case 'ABERTA':\r\n        return 'Aberta';\r\n      case 'FECHADA':\r\n        return 'Fechada';\r\n      case 'RETIRADA':\r\n        return 'Retirada';\r\n      default:\r\n        return status;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get maintenance type display name\r\n   */\r\n  getMaintenanceDisplayName(type: string): string {\r\n    switch (type) {\r\n      case 'PREVENTIVA':\r\n        return 'Preventiva';\r\n      case 'CORRETIVA':\r\n        return 'Corretiva';\r\n      default:\r\n        return type;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Format date for display\r\n   */\r\n  formatDate(dateString: string): string {\r\n    try {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('pt-BR');\r\n    } catch (error) {\r\n      return dateString;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get vehicle display name\r\n   */\r\n  getVeiculoDisplayName(veiculo: any): string {\r\n    if (!veiculo) return 'Veículo não encontrado';\r\n    return `${veiculo.marca} ${veiculo.modelo} (${veiculo.placa})`;\r\n  }\r\n\r\n  /**\r\n   * Get mechanics display names\r\n   */\r\n  getMechanicsDisplayNames(os: OrdemServico): string {\r\n    if (os.encerramentos && os.encerramentos.length > 0) {\r\n      const mecanicos = os.encerramentos.map(e => e.nome_mecanico || 'Não informado');\r\n      return mecanicos.join(', ');\r\n    } else if (os.encerrar_os?.nome_mecanico) {\r\n      return os.encerrar_os.nome_mecanico;\r\n    }\r\n    return 'Não informado';\r\n  }\r\n\r\n  /**\r\n   * View OS details\r\n   */\r\n  viewOSDetails(os: OrdemServico) {\r\n    // For now, show alert with details\r\n    this.showOSDetailsModal(os);\r\n  }\r\n\r\n  /**\r\n   * Add services and parts to OS\r\n   */\r\n  addServicosPecas(os: OrdemServico, event: Event) {\r\n    event.stopPropagation(); // Previne que o clique propague para o card\r\n    this.showAddServicesModal(os);\r\n  }\r\n\r\n  /**\r\n   * Show OS details modal\r\n   */\r\n  async showOSDetailsModal(os: OrdemServico) {\r\n    let message = `\r\nVeículo: ${this.getVeiculoDisplayName(os.veiculo)}\r\n\r\nData: ${this.formatDate(os.created_at)}\r\n\r\nStatus: ${this.getStatusDisplayName(os.situacao_os)}\r\n\r\nProblema: ${os.problema_apresentado}\r\n\r\nSistema: ${os.sistema_afetado}\r\n\r\nTipo: ${this.getMaintenanceDisplayName(os.manutencao)}\r\n\r\nHodômetro: ${os.hodometro} km`;\r\n\r\n    // Adiciona informações do mecânico se a OS estiver fechada\r\n    if (os.situacao_os === 'FECHADA') {\r\n      // Busca informações do encerramento da OS\r\n      const encerramentos = await this.getEncerramentoInfo(os.id);\r\n      if (encerramentos && encerramentos.length > 0) {\r\n        // Mostra todos os mecânicos que trabalharam na OS\r\n        const mecanicos = encerramentos.map(e => e.nome_mecanico || 'Não informado').join(', ');\r\n        message += `\r\n\r\nMecânicos: ${mecanicos}`;\r\n        \r\n        // Mostra a data da manutenção do primeiro encerramento\r\n        if (encerramentos[0].data_da_manutencao) {\r\n          message += `\r\n\r\nData da Manutenção: ${this.formatDate(encerramentos[0].data_da_manutencao)}`;\r\n        }\r\n        \r\n        // Mostra o tempo total do primeiro encerramento\r\n        if (encerramentos[0].tempo_total) {\r\n          message += `\r\n\r\nTempo Total: ${encerramentos[0].tempo_total}`;\r\n        }\r\n      }\r\n    }\r\n\r\n    message = message.trim();\r\n\r\n    const alert = await this.alertController.create({\r\n      header: `OS #${os.id}`,\r\n      message: message,\r\n      buttons: ['Fechar'],\r\n      cssClass: 'os-details-alert'\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  /**\r\n   * Show add services modal\r\n   */\r\n  async showAddServicesModal(os: OrdemServico) {\r\n    const alert = await this.alertController.create({\r\n      header: `Adicionar à OS #${os.id}`,\r\n      message: 'Escolha o que deseja adicionar:',\r\n      buttons: [\r\n        {\r\n          text: 'Cancelar',\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: 'Apenas Serviço',\r\n          handler: () => {\r\n            this.addServico(os);\r\n          }\r\n        },\r\n        {\r\n          text: 'Apenas Peça',\r\n          handler: () => {\r\n            this.addPeca(os);\r\n          }\r\n        },\r\n        {\r\n          text: 'Serviço + Peça',\r\n          handler: () => {\r\n            this.addServicoEPeca(os);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  /**\r\n   * Add service only\r\n   */\r\n  addServico(os: OrdemServico) {\r\n    // TODO: Implementar adição de serviço\r\n    this.showErrorToast('Funcionalidade de adicionar serviço será implementada em breve');\r\n  }\r\n\r\n  /**\r\n   * Add part only\r\n   */\r\n  addPeca(os: OrdemServico) {\r\n    // TODO: Implementar adição de peça\r\n    this.showErrorToast('Funcionalidade de adicionar peça será implementada em breve');\r\n  }\r\n\r\n  /**\r\n   * Add service and part\r\n   */\r\n  addServicoEPeca(os: OrdemServico) {\r\n    // TODO: Implementar adição de serviço e peça\r\n    this.showErrorToast('Funcionalidade de adicionar serviço e peça será implementada em breve');\r\n  }\r\n\r\n  /**\r\n   * Get encerramento info for OS\r\n   */\r\n  async getEncerramentoInfo(osId: number): Promise<any[]> {\r\n    try {\r\n      const token = localStorage.getItem('sgos_token');\r\n      const options: any = {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      };\r\n      \r\n      if (token) {\r\n        options.headers['Authorization'] = `Bearer ${token}`;\r\n      }\r\n      \r\n      const response: any = await this.http.get(\r\n        `http://localhost:8000/api/v1/encerrar-os/?abrir_os_id=${osId}`,\r\n        options\r\n      ).toPromise();\r\n      \r\n      if (response && (response.status === 'success' || response.success) && response.data) {\r\n        const encerramentos = response.data.items || [];\r\n        // Retorna todos os encerramentos encontrados para esta OS\r\n        return encerramentos;\r\n      }\r\n      \r\n      return [];\r\n    } catch (error: any) {\r\n      console.error('Error loading encerramento info:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load mechanic info for closed OS\r\n   */\r\n  async loadMechanicInfo(os: OrdemServico) {\r\n    if (os.situacao_os === 'FECHADA' && !os.encerrar_os) {\r\n      try {\r\n        const encerramentos = await this.getEncerramentoInfo(os.id);\r\n        if (encerramentos && encerramentos.length > 0) {\r\n          // Armazena o primeiro encerramento para compatibilidade com o template\r\n          os.encerrar_os = encerramentos[0];\r\n          // Armazena todos os encerramentos para uso futuro\r\n          os.encerramentos = encerramentos;\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading mechanic info:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load mechanic info for all closed OS\r\n   */\r\n  async loadMechanicInfoForClosedOS() {\r\n    const closedOS = this.ordensServico.filter(os => os.situacao_os === 'FECHADA');\r\n    \r\n    for (const os of closedOS) {\r\n      await this.loadMechanicInfo(os);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get OS statistics\r\n   */\r\n  getOSByStatus(status: string): OrdemServico[] {\r\n    return this.ordensServico.filter(os => os.situacao_os === status);\r\n  }\r\n\r\n  /**\r\n   * Clear filters\r\n   */\r\n  clearFilters() {\r\n    this.searchTerm = '';\r\n    this.selectedStatus = '';\r\n    this.applyFilters();\r\n  }\r\n\r\n  /**\r\n   * Track by function for ngFor optimization\r\n   */\r\n  trackByOSId(index: number, os: OrdemServico): number {\r\n    return os.id;\r\n  }\r\n\r\n  /**\r\n   * Track by function for ngFor optimization (vehicles)\r\n   */\r\n  trackByVeiculoId(index: number, veiculo: Veiculo): number {\r\n    return veiculo.id;\r\n  }\r\n\r\n  /**\r\n   * Open menu\r\n   */\r\n  async openMenu() {\r\n    await this.menuController.open();\r\n  }\r\n\r\n  /**\r\n   * Show success toast\r\n   */\r\n  private async showSuccessToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message,\r\n      duration: 3000,\r\n      position: 'top',\r\n      color: 'success'\r\n    });\r\n    await toast.present();\r\n  }\r\n\r\n  /**\r\n   * Show error toast\r\n   */\r\n  private async showErrorToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message,\r\n      duration: 4000,\r\n      position: 'top',\r\n      color: 'danger'\r\n    });\r\n    await toast.present();\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}