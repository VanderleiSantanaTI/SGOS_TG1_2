{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Teste/Documents/GitHub/SGOS_TG1_2/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/common\";\nfunction ResetPasswordPage_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵtext(1, \" As senhas n\\u00E3o coincidem \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ResetPasswordPage_ion_spinner_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ion-spinner\", 21);\n  }\n}\nclass ResetPasswordPage {\n  constructor(formBuilder, authService, router, loadingController, toastController) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.loadingController = loadingController;\n    this.toastController = toastController;\n    this.loading = false;\n    this.showPassword = false;\n    this.showConfirmPassword = false;\n    this.resetPasswordForm = this.createForm();\n  }\n  ngOnInit() {}\n  createForm() {\n    return this.formBuilder.group({\n      token: ['', [Validators.required, Validators.minLength(6)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      confirmPassword: ['', [Validators.required]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  passwordMatchValidator(group) {\n    const password = group.get('password');\n    const confirmPassword = group.get('confirmPassword');\n    if (password?.value !== confirmPassword?.value) {\n      confirmPassword?.setErrors({\n        mismatch: true\n      });\n      return {\n        mismatch: true\n      };\n    }\n    return null;\n  }\n  onSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.resetPasswordForm.valid) {\n        _this.loading = true;\n        const loading = yield _this.loadingController.create({\n          message: 'Redefinindo senha...',\n          duration: 10000\n        });\n        yield loading.present();\n        try {\n          const {\n            token,\n            password\n          } = _this.resetPasswordForm.value;\n          yield _this.authService.resetPassword(token, password).toPromise();\n          yield _this.showSuccessToast('Senha redefinida com sucesso!');\n          _this.router.navigate(['/login']);\n        } catch (error) {\n          yield _this.showErrorToast(error.message || 'Erro ao redefinir senha');\n        } finally {\n          _this.loading = false;\n          yield loading.dismiss();\n        }\n      }\n    })();\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  toggleConfirmPasswordVisibility() {\n    this.showConfirmPassword = !this.showConfirmPassword;\n  }\n  goToLogin() {\n    this.router.navigate(['/login']);\n  }\n  showSuccessToast(message) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this2.toastController.create({\n        message,\n        duration: 3000,\n        position: 'top',\n        color: 'success'\n      });\n      yield toast.present();\n    })();\n  }\n  showErrorToast(message) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this3.toastController.create({\n        message,\n        duration: 4000,\n        position: 'top',\n        color: 'danger'\n      });\n      yield toast.present();\n    })();\n  }\n  static {\n    this.ɵfac = function ResetPasswordPage_Factory(t) {\n      return new (t || ResetPasswordPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.LoadingController), i0.ɵɵdirectiveInject(i4.ToastController));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ResetPasswordPage,\n      selectors: [[\"app-reset-password\"]],\n      decls: 38,\n      vars: 11,\n      consts: [[3, \"translucent\"], [\"slot\", \"start\"], [\"defaultHref\", \"/forgot-password\"], [3, \"fullscreen\"], [1, \"reset-password-container\"], [1, \"header-section\"], [\"name\", \"key-outline\", 1, \"header-icon\"], [3, \"formGroup\", \"ngSubmit\"], [\"fill\", \"outline\"], [\"position\", \"stacked\"], [\"formControlName\", \"token\", \"type\", \"text\", \"placeholder\", \"Digite o c\\u00F3digo recebido\"], [\"formControlName\", \"password\", \"placeholder\", \"Digite sua nova senha\", 3, \"type\"], [\"fill\", \"clear\", \"slot\", \"end\", 3, \"click\"], [\"slot\", \"icon-only\", 3, \"name\"], [\"formControlName\", \"confirmPassword\", \"placeholder\", \"Confirme sua nova senha\", 3, \"type\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"type\", \"submit\", \"expand\", \"block\", 1, \"submit-button\", 3, \"disabled\"], [\"name\", \"crescent\", \"slot\", \"start\", 4, \"ngIf\"], [1, \"footer-actions\"], [\"fill\", \"clear\", 3, \"click\"], [1, \"error-message\"], [\"name\", \"crescent\", \"slot\", \"start\"]],\n      template: function ResetPasswordPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n          i0.ɵɵelement(3, \"ion-back-button\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \"Redefinir Senha\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"div\", 4)(8, \"div\", 5);\n          i0.ɵɵelement(9, \"ion-icon\", 6);\n          i0.ɵɵelementStart(10, \"h1\");\n          i0.ɵɵtext(11, \"Nova Senha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"p\");\n          i0.ɵɵtext(13, \"Digite o c\\u00F3digo recebido por email e sua nova senha\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function ResetPasswordPage_Template_form_ngSubmit_14_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(15, \"ion-item\", 8)(16, \"ion-label\", 9);\n          i0.ɵɵtext(17, \"C\\u00F3digo de Recupera\\u00E7\\u00E3o\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(18, \"ion-input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"ion-item\", 8)(20, \"ion-label\", 9);\n          i0.ɵɵtext(21, \"Nova Senha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"ion-input\", 11);\n          i0.ɵɵelementStart(23, \"ion-button\", 12);\n          i0.ɵɵlistener(\"click\", function ResetPasswordPage_Template_ion_button_click_23_listener() {\n            return ctx.togglePasswordVisibility();\n          });\n          i0.ɵɵelement(24, \"ion-icon\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(25, \"ion-item\", 8)(26, \"ion-label\", 9);\n          i0.ɵɵtext(27, \"Confirmar Senha\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"ion-input\", 14);\n          i0.ɵɵelementStart(29, \"ion-button\", 12);\n          i0.ɵɵlistener(\"click\", function ResetPasswordPage_Template_ion_button_click_29_listener() {\n            return ctx.toggleConfirmPasswordVisibility();\n          });\n          i0.ɵɵelement(30, \"ion-icon\", 13);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(31, ResetPasswordPage_div_31_Template, 2, 0, \"div\", 15);\n          i0.ɵɵelementStart(32, \"ion-button\", 16);\n          i0.ɵɵtemplate(33, ResetPasswordPage_ion_spinner_33_Template, 1, 0, \"ion-spinner\", 17);\n          i0.ɵɵtext(34);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 18)(36, \"ion-button\", 19);\n          i0.ɵɵlistener(\"click\", function ResetPasswordPage_Template_ion_button_click_36_listener() {\n            return ctx.goToLogin();\n          });\n          i0.ɵɵtext(37, \" Voltar ao Login \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_7_0;\n          i0.ɵɵproperty(\"translucent\", true);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"fullscreen\", true);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.resetPasswordForm);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"name\", ctx.showPassword ? \"eye-off-outline\" : \"eye-outline\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"type\", ctx.showConfirmPassword ? \"text\" : \"password\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"name\", ctx.showConfirmPassword ? \"eye-off-outline\" : \"eye-outline\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.resetPasswordForm.get(\"confirmPassword\")) == null ? null : tmp_7_0.errors == null ? null : tmp_7_0.errors[\"mismatch\"]) && ((tmp_7_0 = ctx.resetPasswordForm.get(\"confirmPassword\")) == null ? null : tmp_7_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.loading || ctx.resetPasswordForm.invalid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Redefinindo...\" : \"Redefinir Senha\", \" \");\n        }\n      },\n      dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.IonButton, i4.IonButtons, i4.IonContent, i4.IonHeader, i4.IonIcon, i4.IonInput, i4.IonItem, i4.IonLabel, i4.IonSpinner, i4.IonTitle, i4.IonToolbar, i4.TextValueAccessor, i4.IonBackButton],\n      styles: [\".reset-password-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  max-width: 400px;\\n  margin: 0 auto;\\n  min-height: calc(100vh - 56px);\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n\\n.header-section[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-bottom: 32px;\\n}\\n.header-section[_ngcontent-%COMP%]   .header-icon[_ngcontent-%COMP%] {\\n  font-size: 64px;\\n  color: var(--ion-color-primary);\\n  margin-bottom: 16px;\\n}\\n.header-section[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  font-size: 24px;\\n  font-weight: 600;\\n  margin: 0 0 8px 0;\\n}\\n.header-section[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  color: var(--ion-color-medium);\\n  margin: 0;\\n}\\n\\nform[_ngcontent-%COMP%] {\\n  margin-bottom: 24px;\\n}\\nform[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%] {\\n  margin-bottom: 16px;\\n  --border-radius: 8px;\\n}\\nform[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%] {\\n  color: var(--ion-color-danger);\\n  font-size: 12px;\\n  margin: -12px 0 16px 16px;\\n}\\nform[_ngcontent-%COMP%]   .submit-button[_ngcontent-%COMP%] {\\n  --border-radius: 8px;\\n  margin-top: 16px;\\n  height: 48px;\\n}\\n\\n.footer-actions[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvYXV0aC9yZXNldC1wYXNzd29yZC9yZXNldC1wYXNzd29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsOEJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxtQkFBQTtBQUNGO0FBQ0U7RUFDRSxlQUFBO0VBQ0EsK0JBQUE7RUFDQSxtQkFBQTtBQUNKO0FBRUU7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxpQkFBQTtBQUFKO0FBR0U7RUFDRSw4QkFBQTtFQUNBLFNBQUE7QUFESjs7QUFLQTtFQUNFLG1CQUFBO0FBRkY7QUFJRTtFQUNFLG1CQUFBO0VBQ0Esb0JBQUE7QUFGSjtBQUtFO0VBQ0UsOEJBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7QUFISjtBQU1FO0VBQ0Usb0JBQUE7RUFDQSxnQkFBQTtFQUNBLFlBQUE7QUFKSjs7QUFRQTtFQUNFLGtCQUFBO0FBTEYiLCJzb3VyY2VzQ29udGVudCI6WyIucmVzZXQtcGFzc3dvcmQtY29udGFpbmVyIHtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIG1heC13aWR0aDogNDAwcHg7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgbWluLWhlaWdodDogY2FsYygxMDB2aCAtIDU2cHgpO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmhlYWRlci1zZWN0aW9uIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogMzJweDtcclxuXHJcbiAgLmhlYWRlci1pY29uIHtcclxuICAgIGZvbnQtc2l6ZTogNjRweDtcclxuICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gIH1cclxuXHJcbiAgaDEge1xyXG4gICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIG1hcmdpbjogMCAwIDhweCAwO1xyXG4gIH1cclxuXHJcbiAgcCB7XHJcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bSk7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG59XHJcblxyXG5mb3JtIHtcclxuICBtYXJnaW4tYm90dG9tOiAyNHB4O1xyXG5cclxuICBpb24taXRlbSB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNnB4O1xyXG4gICAgLS1ib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgfVxyXG5cclxuICAuZXJyb3ItbWVzc2FnZSB7XHJcbiAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLWRhbmdlcik7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBtYXJnaW46IC0xMnB4IDAgMTZweCAxNnB4O1xyXG4gIH1cclxuXHJcbiAgLnN1Ym1pdC1idXR0b24ge1xyXG4gICAgLS1ib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAxNnB4O1xyXG4gICAgaGVpZ2h0OiA0OHB4O1xyXG4gIH1cclxufVxyXG5cclxuLmZvb3Rlci1hY3Rpb25zIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}\nexport { ResetPasswordPage };","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ResetPasswordPage","constructor","formBuilder","authService","router","loadingController","toastController","loading","showPassword","showConfirmPassword","resetPasswordForm","createForm","ngOnInit","group","token","required","minLength","password","confirmPassword","validators","passwordMatchValidator","get","value","setErrors","mismatch","onSubmit","_this","_asyncToGenerator","valid","create","message","duration","present","resetPassword","toPromise","showSuccessToast","navigate","error","showErrorToast","dismiss","togglePasswordVisibility","toggleConfirmPasswordVisibility","goToLogin","_this2","toast","position","color","_this3","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","LoadingController","ToastController","selectors","decls","vars","consts","template","ResetPasswordPage_Template","rf","ctx","ɵɵlistener","ResetPasswordPage_Template_form_ngSubmit_14_listener","ResetPasswordPage_Template_ion_button_click_23_listener","ResetPasswordPage_Template_ion_button_click_29_listener","ɵɵtemplate","ResetPasswordPage_div_31_Template","ResetPasswordPage_ion_spinner_33_Template","ResetPasswordPage_Template_ion_button_click_36_listener","ɵɵproperty","ɵɵadvance","tmp_7_0","errors","touched","invalid","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Teste\\Documents\\GitHub\\SGOS_TG1_2\\frontend\\src\\app\\pages\\auth\\reset-password\\reset-password.page.ts","C:\\Users\\Teste\\Documents\\GitHub\\SGOS_TG1_2\\frontend\\src\\app\\pages\\auth\\reset-password\\reset-password.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingController, ToastController } from '@ionic/angular';\r\n\r\nimport { AuthService } from '../../../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.page.html',\r\n  styleUrls: ['./reset-password.page.scss'],\r\n})\r\nexport class ResetPasswordPage implements OnInit {\r\n  resetPasswordForm: FormGroup;\r\n  loading = false;\r\n  showPassword = false;\r\n  showConfirmPassword = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private loadingController: LoadingController,\r\n    private toastController: ToastController\r\n  ) {\r\n    this.resetPasswordForm = this.createForm();\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  private createForm(): FormGroup {\r\n    return this.formBuilder.group({\r\n      token: ['', [Validators.required, Validators.minLength(6)]],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required]]\r\n    }, { validators: this.passwordMatchValidator });\r\n  }\r\n\r\n  private passwordMatchValidator(group: FormGroup) {\r\n    const password = group.get('password');\r\n    const confirmPassword = group.get('confirmPassword');\r\n    \r\n    if (password?.value !== confirmPassword?.value) {\r\n      confirmPassword?.setErrors({ mismatch: true });\r\n      return { mismatch: true };\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n  async onSubmit() {\r\n    if (this.resetPasswordForm.valid) {\r\n      this.loading = true;\r\n      const loading = await this.loadingController.create({\r\n        message: 'Redefinindo senha...',\r\n        duration: 10000\r\n      });\r\n      await loading.present();\r\n\r\n      try {\r\n        const { token, password } = this.resetPasswordForm.value;\r\n        await this.authService.resetPassword(token, password).toPromise();\r\n        \r\n        await this.showSuccessToast('Senha redefinida com sucesso!');\r\n        this.router.navigate(['/login']);\r\n      } catch (error: any) {\r\n        await this.showErrorToast(error.message || 'Erro ao redefinir senha');\r\n      } finally {\r\n        this.loading = false;\r\n        await loading.dismiss();\r\n      }\r\n    }\r\n  }\r\n\r\n  togglePasswordVisibility() {\r\n    this.showPassword = !this.showPassword;\r\n  }\r\n\r\n  toggleConfirmPasswordVisibility() {\r\n    this.showConfirmPassword = !this.showConfirmPassword;\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  private async showSuccessToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message,\r\n      duration: 3000,\r\n      position: 'top',\r\n      color: 'success'\r\n    });\r\n    await toast.present();\r\n  }\r\n\r\n  private async showErrorToast(message: string) {\r\n    const toast = await this.toastController.create({\r\n      message,\r\n      duration: 4000,\r\n      position: 'top',\r\n      color: 'danger'\r\n    });\r\n    await toast.present();\r\n  }\r\n}\r\n","<ion-header [translucent]=\"true\">\r\n  <ion-toolbar>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button defaultHref=\"/forgot-password\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>Redefinir Senha</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content [fullscreen]=\"true\">\r\n  <div class=\"reset-password-container\">\r\n    <div class=\"header-section\">\r\n      <ion-icon name=\"key-outline\" class=\"header-icon\"></ion-icon>\r\n      <h1>Nova Senha</h1>\r\n      <p>Digite o código recebido por email e sua nova senha</p>\r\n    </div>\r\n\r\n    <form [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"onSubmit()\">\r\n      <ion-item fill=\"outline\">\r\n        <ion-label position=\"stacked\">Código de Recuperação</ion-label>\r\n        <ion-input \r\n          formControlName=\"token\"\r\n          type=\"text\"\r\n          placeholder=\"Digite o código recebido\">\r\n        </ion-input>\r\n      </ion-item>\r\n\r\n      <ion-item fill=\"outline\">\r\n        <ion-label position=\"stacked\">Nova Senha</ion-label>\r\n        <ion-input \r\n          formControlName=\"password\"\r\n          [type]=\"showPassword ? 'text' : 'password'\"\r\n          placeholder=\"Digite sua nova senha\">\r\n        </ion-input>\r\n        <ion-button \r\n          fill=\"clear\" \r\n          slot=\"end\" \r\n          (click)=\"togglePasswordVisibility()\">\r\n          <ion-icon \r\n            [name]=\"showPassword ? 'eye-off-outline' : 'eye-outline'\"\r\n            slot=\"icon-only\">\r\n          </ion-icon>\r\n        </ion-button>\r\n      </ion-item>\r\n\r\n      <ion-item fill=\"outline\">\r\n        <ion-label position=\"stacked\">Confirmar Senha</ion-label>\r\n        <ion-input \r\n          formControlName=\"confirmPassword\"\r\n          [type]=\"showConfirmPassword ? 'text' : 'password'\"\r\n          placeholder=\"Confirme sua nova senha\">\r\n        </ion-input>\r\n        <ion-button \r\n          fill=\"clear\" \r\n          slot=\"end\" \r\n          (click)=\"toggleConfirmPasswordVisibility()\">\r\n          <ion-icon \r\n            [name]=\"showConfirmPassword ? 'eye-off-outline' : 'eye-outline'\"\r\n            slot=\"icon-only\">\r\n          </ion-icon>\r\n        </ion-button>\r\n      </ion-item>\r\n\r\n      <div class=\"error-message\" *ngIf=\"resetPasswordForm.get('confirmPassword')?.errors?.['mismatch'] && resetPasswordForm.get('confirmPassword')?.touched\">\r\n        As senhas não coincidem\r\n      </div>\r\n\r\n      <ion-button \r\n        type=\"submit\"\r\n        expand=\"block\"\r\n        [disabled]=\"loading || resetPasswordForm.invalid\"\r\n        class=\"submit-button\">\r\n        <ion-spinner *ngIf=\"loading\" name=\"crescent\" slot=\"start\"></ion-spinner>\r\n        {{ loading ? 'Redefinindo...' : 'Redefinir Senha' }}\r\n      </ion-button>\r\n    </form>\r\n\r\n    <div class=\"footer-actions\">\r\n      <ion-button fill=\"clear\" (click)=\"goToLogin()\">\r\n        Voltar ao Login\r\n      </ion-button>\r\n    </div>\r\n  </div>\r\n</ion-content>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}