{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nclass VeiculoService {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.endpoint = '/veiculos';\n  }\n  /**\n   * Get all vehicles with pagination\n   */\n  getVeiculos(params) {\n    const queryParams = {\n      skip: params?.skip || 0,\n      limit: params?.limit || 10,\n      ...(params?.search && {\n        search: params.search\n      }),\n      ...(params?.marca && {\n        marca: params.marca\n      }),\n      ...(params?.status && {\n        status: params.status\n      }),\n      ...(params?.su_cia_viatura && {\n        su_cia_viatura: params.su_cia_viatura\n      })\n    };\n    return this.apiService.getPaginated(this.endpoint, queryParams);\n  }\n  /**\n   * Get vehicle by ID\n   */\n  getVeiculo(id) {\n    return this.apiService.get(`${this.endpoint}/${id}`).pipe(map(response => {\n      if (response.success && response.data) {\n        return response.data;\n      }\n      throw new Error(response.message || 'Veículo não encontrado');\n    }));\n  }\n  /**\n   * Create new vehicle\n   */\n  createVeiculo(veiculoData) {\n    return this.apiService.post(this.endpoint, veiculoData).pipe(map(response => {\n      if (response.success && response.data) {\n        return response.data;\n      }\n      throw new Error(response.message || 'Erro ao criar veículo');\n    }));\n  }\n  /**\n   * Update vehicle\n   */\n  updateVeiculo(id, veiculoData) {\n    return this.apiService.put(`${this.endpoint}/${id}`, veiculoData).pipe(map(response => {\n      if (response.success && response.data) {\n        return response.data;\n      }\n      throw new Error(response.message || 'Erro ao atualizar veículo');\n    }));\n  }\n  /**\n   * Delete vehicle\n   */\n  deleteVeiculo(id) {\n    return this.apiService.delete(`${this.endpoint}/${id}`).pipe(map(response => {\n      if (response.success) {\n        return true;\n      }\n      throw new Error(response.message || 'Erro ao deletar veículo');\n    }));\n  }\n  /**\n   * Search vehicles by plate\n   */\n  searchByPlaca(placa) {\n    return this.getVeiculos({\n      search: placa,\n      limit: 10\n    }).pipe(map(response => this.apiService.extractItems(response)));\n  }\n  /**\n   * Search vehicles by patrimonio\n   */\n  searchByPatrimonio(patrimonio) {\n    return this.getVeiculos({\n      search: patrimonio,\n      limit: 10\n    }).pipe(map(response => this.apiService.extractItems(response)));\n  }\n  /**\n   * Get vehicles by status\n   */\n  getVeiculosByStatus(status) {\n    return this.getVeiculos({\n      status,\n      limit: 1000\n    }).pipe(map(response => this.apiService.extractItems(response)));\n  }\n  /**\n   * Get active vehicles only\n   */\n  getActiveVeiculos() {\n    return this.getVeiculosByStatus('ATIVO');\n  }\n  /**\n   * Get vehicles by company\n   */\n  getVeiculosByCia(su_cia_viatura) {\n    return this.getVeiculos({\n      su_cia_viatura,\n      limit: 1000\n    }).pipe(map(response => this.apiService.extractItems(response)));\n  }\n  /**\n   * Get available brands\n   */\n  getMarcas() {\n    return this.getVeiculos({\n      limit: 1000\n    }).pipe(map(response => {\n      const veiculos = this.apiService.extractItems(response);\n      const marcas = [...new Set(veiculos.map(v => v.marca))];\n      return marcas.sort();\n    }));\n  }\n  /**\n   * Get available companies\n   */\n  getCompanias() {\n    return this.getVeiculos({\n      limit: 1000\n    }).pipe(map(response => {\n      const veiculos = this.apiService.extractItems(response);\n      const companias = [...new Set(veiculos.map(v => v.su_cia_viatura))];\n      return companias.sort();\n    }));\n  }\n  /**\n   * Validate plate availability\n   */\n  validatePlaca(placa, excludeId) {\n    return this.searchByPlaca(placa).pipe(map(veiculos => {\n      const existingVeiculo = veiculos.find(v => v.placa.toUpperCase() === placa.toUpperCase());\n      if (!existingVeiculo) return true;\n      if (excludeId && existingVeiculo.id === excludeId) return true;\n      return false;\n    }));\n  }\n  /**\n   * Validate patrimonio availability\n   */\n  validatePatrimonio(patrimonio, excludeId) {\n    return this.searchByPatrimonio(patrimonio).pipe(map(veiculos => {\n      const existingVeiculo = veiculos.find(v => v.patrimonio === patrimonio);\n      if (!existingVeiculo) return true;\n      if (excludeId && existingVeiculo.id === excludeId) return true;\n      return false;\n    }));\n  }\n  /**\n   * Update vehicle status\n   */\n  updateStatus(id, status) {\n    const updateData = {\n      status\n    };\n    return this.updateVeiculo(id, updateData);\n  }\n  /**\n   * Get vehicle statistics\n   */\n  getVeiculoStats() {\n    return this.getVeiculos({\n      limit: 1000\n    }).pipe(map(response => {\n      const veiculos = this.apiService.extractItems(response);\n      const total = veiculos.length;\n      const ativos = veiculos.filter(v => v.status === 'ATIVO').length;\n      const manutencao = veiculos.filter(v => v.status === 'MANUTENCAO').length;\n      const inativos = veiculos.filter(v => v.status === 'INATIVO').length;\n      const porMarca = {};\n      const porCia = {};\n      veiculos.forEach(veiculo => {\n        porMarca[veiculo.marca] = (porMarca[veiculo.marca] || 0) + 1;\n        porCia[veiculo.su_cia_viatura] = (porCia[veiculo.su_cia_viatura] || 0) + 1;\n      });\n      return {\n        total,\n        ativos,\n        manutencao,\n        inativos,\n        porMarca,\n        porCia\n      };\n    }));\n  }\n  /**\n   * Get maintenance report for vehicle\n   */\n  getRelatorioManutencao(id) {\n    return this.apiService.get(`${this.endpoint}/${id}/relatorio-manutencao`);\n  }\n  static {\n    this.ɵfac = function VeiculoService_Factory(t) {\n      return new (t || VeiculoService)(i0.ɵɵinject(i1.ApiService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: VeiculoService,\n      factory: VeiculoService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { VeiculoService };","map":{"version":3,"names":["map","VeiculoService","constructor","apiService","endpoint","getVeiculos","params","queryParams","skip","limit","search","marca","status","su_cia_viatura","getPaginated","getVeiculo","id","get","pipe","response","success","data","Error","message","createVeiculo","veiculoData","post","updateVeiculo","put","deleteVeiculo","delete","searchByPlaca","placa","extractItems","searchByPatrimonio","patrimonio","getVeiculosByStatus","getActiveVeiculos","getVeiculosByCia","getMarcas","veiculos","marcas","Set","v","sort","getCompanias","companias","validatePlaca","excludeId","existingVeiculo","find","toUpperCase","validatePatrimonio","updateStatus","updateData","getVeiculoStats","total","length","ativos","filter","manutencao","inativos","porMarca","porCia","forEach","veiculo","getRelatorioManutencao","i0","ɵɵinject","i1","ApiService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Teste\\Documents\\GitHub\\SGOS_TG1_2\\frontend\\src\\app\\services\\veiculo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ApiService, QueryParams } from './api.service';\r\nimport { \r\n  Veiculo, \r\n  VeiculoCreate, \r\n  VeiculoUpdate, \r\n  ApiResponse, \r\n  PaginatedResponse \r\n} from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VeiculoService {\r\n  private readonly endpoint = '/veiculos';\r\n\r\n  constructor(private apiService: ApiService) {}\r\n\r\n  /**\r\n   * Get all vehicles with pagination\r\n   */\r\n  getVeiculos(params?: {\r\n    skip?: number;\r\n    limit?: number;\r\n    search?: string;\r\n    marca?: string;\r\n    status?: string;\r\n    su_cia_viatura?: string;\r\n  }): Observable<PaginatedResponse<Veiculo>> {\r\n    const queryParams: QueryParams = {\r\n      skip: params?.skip || 0,\r\n      limit: params?.limit || 10,\r\n      ...(params?.search && { search: params.search }),\r\n      ...(params?.marca && { marca: params.marca }),\r\n      ...(params?.status && { status: params.status }),\r\n      ...(params?.su_cia_viatura && { su_cia_viatura: params.su_cia_viatura })\r\n    };\r\n\r\n    return this.apiService.getPaginated<Veiculo>(this.endpoint, queryParams);\r\n  }\r\n\r\n  /**\r\n   * Get vehicle by ID\r\n   */\r\n  getVeiculo(id: number): Observable<Veiculo> {\r\n    return this.apiService.get<ApiResponse<Veiculo>>(`${this.endpoint}/${id}`)\r\n      .pipe(\r\n        map(response => {\r\n          if (response.success && response.data) {\r\n            return response.data;\r\n          }\r\n          throw new Error(response.message || 'Veículo não encontrado');\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Create new vehicle\r\n   */\r\n  createVeiculo(veiculoData: VeiculoCreate): Observable<Veiculo> {\r\n    return this.apiService.post<ApiResponse<Veiculo>>(this.endpoint, veiculoData)\r\n      .pipe(\r\n        map(response => {\r\n          if (response.success && response.data) {\r\n            return response.data;\r\n          }\r\n          throw new Error(response.message || 'Erro ao criar veículo');\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Update vehicle\r\n   */\r\n  updateVeiculo(id: number, veiculoData: VeiculoUpdate): Observable<Veiculo> {\r\n    return this.apiService.put<ApiResponse<Veiculo>>(`${this.endpoint}/${id}`, veiculoData)\r\n      .pipe(\r\n        map(response => {\r\n          if (response.success && response.data) {\r\n            return response.data;\r\n          }\r\n          throw new Error(response.message || 'Erro ao atualizar veículo');\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Delete vehicle\r\n   */\r\n  deleteVeiculo(id: number): Observable<boolean> {\r\n    return this.apiService.delete<ApiResponse>(`${this.endpoint}/${id}`)\r\n      .pipe(\r\n        map(response => {\r\n          if (response.success) {\r\n            return true;\r\n          }\r\n          throw new Error(response.message || 'Erro ao deletar veículo');\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Search vehicles by plate\r\n   */\r\n  searchByPlaca(placa: string): Observable<Veiculo[]> {\r\n    return this.getVeiculos({ search: placa, limit: 10 })\r\n      .pipe(\r\n        map(response => this.apiService.extractItems(response))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Search vehicles by patrimonio\r\n   */\r\n  searchByPatrimonio(patrimonio: string): Observable<Veiculo[]> {\r\n    return this.getVeiculos({ search: patrimonio, limit: 10 })\r\n      .pipe(\r\n        map(response => this.apiService.extractItems(response))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get vehicles by status\r\n   */\r\n  getVeiculosByStatus(status: 'ATIVO' | 'MANUTENCAO' | 'INATIVO'): Observable<Veiculo[]> {\r\n    return this.getVeiculos({ status, limit: 1000 })\r\n      .pipe(\r\n        map(response => this.apiService.extractItems(response))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get active vehicles only\r\n   */\r\n  getActiveVeiculos(): Observable<Veiculo[]> {\r\n    return this.getVeiculosByStatus('ATIVO');\r\n  }\r\n\r\n  /**\r\n   * Get vehicles by company\r\n   */\r\n  getVeiculosByCia(su_cia_viatura: string): Observable<Veiculo[]> {\r\n    return this.getVeiculos({ su_cia_viatura, limit: 1000 })\r\n      .pipe(\r\n        map(response => this.apiService.extractItems(response))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get available brands\r\n   */\r\n  getMarcas(): Observable<string[]> {\r\n    return this.getVeiculos({ limit: 1000 })\r\n      .pipe(\r\n        map(response => {\r\n          const veiculos = this.apiService.extractItems(response);\r\n          const marcas = [...new Set(veiculos.map(v => v.marca))];\r\n          return marcas.sort();\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get available companies\r\n   */\r\n  getCompanias(): Observable<string[]> {\r\n    return this.getVeiculos({ limit: 1000 })\r\n      .pipe(\r\n        map(response => {\r\n          const veiculos = this.apiService.extractItems(response);\r\n          const companias = [...new Set(veiculos.map(v => v.su_cia_viatura))];\r\n          return companias.sort();\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Validate plate availability\r\n   */\r\n  validatePlaca(placa: string, excludeId?: number): Observable<boolean> {\r\n    return this.searchByPlaca(placa)\r\n      .pipe(\r\n        map(veiculos => {\r\n          const existingVeiculo = veiculos.find(v => \r\n            v.placa.toUpperCase() === placa.toUpperCase()\r\n          );\r\n          \r\n          if (!existingVeiculo) return true;\r\n          if (excludeId && existingVeiculo.id === excludeId) return true;\r\n          \r\n          return false;\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Validate patrimonio availability\r\n   */\r\n  validatePatrimonio(patrimonio: string, excludeId?: number): Observable<boolean> {\r\n    return this.searchByPatrimonio(patrimonio)\r\n      .pipe(\r\n        map(veiculos => {\r\n          const existingVeiculo = veiculos.find(v => \r\n            v.patrimonio === patrimonio\r\n          );\r\n          \r\n          if (!existingVeiculo) return true;\r\n          if (excludeId && existingVeiculo.id === excludeId) return true;\r\n          \r\n          return false;\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Update vehicle status\r\n   */\r\n  updateStatus(id: number, status: 'ATIVO' | 'MANUTENCAO' | 'INATIVO'): Observable<Veiculo> {\r\n    const updateData: VeiculoUpdate = { status };\r\n    return this.updateVeiculo(id, updateData);\r\n  }\r\n\r\n  /**\r\n   * Get vehicle statistics\r\n   */\r\n  getVeiculoStats(): Observable<{\r\n    total: number;\r\n    ativos: number;\r\n    manutencao: number;\r\n    inativos: number;\r\n    porMarca: { [key: string]: number };\r\n    porCia: { [key: string]: number };\r\n  }> {\r\n    return this.getVeiculos({ limit: 1000 })\r\n      .pipe(\r\n        map(response => {\r\n          const veiculos = this.apiService.extractItems(response);\r\n          const total = veiculos.length;\r\n          const ativos = veiculos.filter(v => v.status === 'ATIVO').length;\r\n          const manutencao = veiculos.filter(v => v.status === 'MANUTENCAO').length;\r\n          const inativos = veiculos.filter(v => v.status === 'INATIVO').length;\r\n          \r\n          const porMarca: { [key: string]: number } = {};\r\n          const porCia: { [key: string]: number } = {};\r\n          \r\n          veiculos.forEach(veiculo => {\r\n            porMarca[veiculo.marca] = (porMarca[veiculo.marca] || 0) + 1;\r\n            porCia[veiculo.su_cia_viatura] = (porCia[veiculo.su_cia_viatura] || 0) + 1;\r\n          });\r\n\r\n          return { total, ativos, manutencao, inativos, porMarca, porCia };\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Get maintenance report for vehicle\r\n   */\r\n  getRelatorioManutencao(id: number): Observable<any> {\r\n    return this.apiService.get<ApiResponse<any>>(`${this.endpoint}/${id}/relatorio-manutencao`);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}